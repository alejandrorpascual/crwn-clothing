{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedPrice, cartItem) => accumulatedPrice + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/alejandrorpascual/react-course-andrei/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","accumulatedPrice","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP,OAAO,MAAOC,gBAAgB,GAAGN,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CE,IAAI,IAAIA,IAAI,CAACI,MAFgC,CAAxC;AAKP,OAAO,MAAMC,mBAAmB,GAAGR,cAAc,CAC/C,CAACI,eAAD,CAD+C,EAE/CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACX,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFtB,EAGV,CAHU,CAFkC,CAA1C;AASP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,EAE3CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CACX,CAACK,gBAAD,EAAmBH,QAAnB,KACEG,gBAAgB,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAFvC,EAGV,CAHU,CAF8B,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n\nexport const  selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n)\n\nexport const selectCartItemCount = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(\n    (accumulatedQuantity, cartItem) => \n      accumulatedQuantity + cartItem.quantity, \n     0\n  )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(\n    (accumulatedPrice, cartItem) => \n      accumulatedPrice + cartItem.quantity * cartItem.price, \n     0\n  )\n);"]},"metadata":{},"sourceType":"module"}